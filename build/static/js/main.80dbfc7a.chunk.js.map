{"version":3,"sources":["logo.svg","BlockChart/Input.js","BlockChart/InputBuilder.js","BlockChart/BlockChart.js","CardGrid/CardGrid.js","Builder/Builder.js","App.js","reportWebVitals.js","index.js"],"names":["Input","className","InputGroup","Prepend","Checkbox","aria-label","FormControl","InputBuilder","BlockChart","CardGrid","Builder","useState","mode","setMode","isModeChart","isModeCard","ButtonGroup","size","Button","onClick","style","margin","border","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,I,gDCQFA,EAAQ,WAGnB,OAGE,yBAASC,UAAU,uBAAnB,SAEI,eAACC,EAAA,EAAD,CAAYD,UAAU,OAAtB,UAEI,cAACC,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,SAAZ,CAAqBC,aAAW,wCAGpC,cAACC,EAAA,EAAD,CAAaD,aAAW,mCCdvBE,EAAe,WAG1B,OAGE,0BAASN,UAAU,uBAAnB,0BAII,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCjBKO,EAAa,WAIxB,OAGE,0BAASP,UAAU,uBAAnB,wBAGC,cAAC,EAAD,QCZQQ,EAAW,WAEtB,OAGE,yBAASR,UAAU,uBAAnB,sDCDSS,EAAU,WAAO,IAAD,EAEHC,mBAAS,SAFN,mBAEpBC,EAFoB,KAEdC,EAFc,KASrBC,EAAuB,UAATF,EACdG,EAAuB,SAATH,EAEpB,OAGE,0BAASX,UAAU,uBAAnB,UAEI,wBAIA,eAACe,EAAA,EAAD,CAAaC,KAAK,KAAKhB,UAAU,OAAjC,UACI,cAACiB,EAAA,EAAD,CAAQC,QAAY,kBAAMN,EAAQ,UAAWO,MAAO,CAAEC,OAAQ,OAAQC,OAAQR,EAAc,iBAAkB,MAA9G,wBACA,cAACI,EAAA,EAAD,CAAQC,QAAY,kBAAMN,EAAQ,SAAWO,MAAO,CAAEC,OAAQ,OAAQC,OAAQP,EAAa,iBAAkB,MAA7G,0BAOAD,EACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCvBGS,MAdf,WAGE,OACE,uBAAMtB,UAAU,uBAAhB,+BAGE,cAAC,EAAD,QCASuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.80dbfc7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\nexport const Input = () => {\r\n\r\n \r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n        \r\n        <InputGroup className=\"mb-3\">\r\n\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n            </InputGroup.Prepend>\r\n\r\n            <FormControl aria-label=\"Text input with checkbox\" />\r\n        </InputGroup>\r\n\r\n        \r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\nimport { Input } from './Input'\r\n\r\n\r\n\r\nexport const InputBuilder = () => {\r\n\r\n \r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n        Input Builder\r\n\r\n\r\n        <Input />\r\n        <Input />\r\n        <Input />\r\n        <Input />\r\n        <Input />\r\n        <Input />\r\n        <Input />\r\n\r\n        \r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { InputBuilder } from './InputBuilder'\r\n\r\nexport const BlockChart = () => {\r\n\r\n  \r\n \r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n     Block Chart\r\n\r\n     <InputBuilder />\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const CardGrid = () => {\r\n\r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n        Card Grids [saved blocks, saved charts]\r\n         \r\n     \r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nimport {BlockChart} from '../BlockChart/BlockChart'\r\nimport {CardGrid} from '../CardGrid/CardGrid'\r\n\r\nexport const Builder = () => {\r\n\r\n  const [mode, setMode] = useState('chart')\r\n\r\n    //   useEffect(() =>{\r\n\r\n\r\n    //   }, [mode])\r\n\r\n  const isModeChart = mode === 'chart'\r\n  const isModeCard  = mode === 'card'\r\n\r\n  return (\r\n\r\n\r\n    <section className=\"flex-column-centered\">\r\n        \r\n        <div>\r\n\r\n        </div>\r\n\r\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n            <Button onClick = { () => setMode('chart') } style={{ margin: '16px', border: isModeChart ? '2px solid cyan': null }}>Chart mode</Button>\r\n            <Button onClick = { () => setMode('card')  } style={{ margin: '16px', border: isModeCard ? '2px solid cyan': null }}>Card mode</Button>\r\n        </ButtonGroup>\r\n\r\n\r\n\r\n        {/* conditional re-render ok for now. May change based on API setup */}\r\n        {\r\n            isModeChart ? \r\n            <BlockChart />\r\n            :\r\n            <CardGrid />\r\n        }\r\n    </section>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport './styles/flex.css'\nimport { Builder } from './Builder/Builder'\n\nfunction App() {\n\n  //app setup. Tunnel content through here\n  return (\n    <main className=\"flex-column-centered\">\n      Port Building App.\n\n      <Builder />\n\n\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}