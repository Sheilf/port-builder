{"version":3,"sources":["logo.svg","BlockChart/Input.js","BlockChart/Block.js","BlockChart/BlockChart.js","CardGrid/CardGrid.js","Builder/Builder.js","App.js","reportWebVitals.js","index.js"],"names":["Input","className","InputGroup","Prepend","Checkbox","aria-label","FormControl","Block","props","useState","blockChart","map","item","BlockChart","CardGrid","Card","style","width","background","borderRadius","padding","boxShadow","Img","variant","src","Body","Title","Text","Button","Builder","mode","setMode","isModeChart","isModeCard","ButtonGroup","size","onClick","margin","border","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,I,gDCQFA,EAAQ,WAGnB,OAGE,yBAASC,UAAU,uBAAnB,SAEI,eAACC,EAAA,EAAD,CAAYD,UAAU,OAAtB,UAEI,cAACC,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,SAAZ,CAAqBC,aAAW,wCAGpC,cAACC,EAAA,EAAD,CAAaD,aAAW,mCCdvBE,EAAQ,SAACC,GAAW,IAAD,EAEJC,mBAAS,IAFL,6BAG9B,OAGE,yBAASR,UAAU,uBAAnB,SAGIO,EAAME,WAAWC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,UCVxBC,EAAa,WAAM,MAGMJ,mBAAS,CAC3C,GACA,GACA,GACA,GACA,KAR4B,mBAGvBC,EAHuB,UAa9B,OAGE,0BAAST,UAAU,uBAAnB,UACE,0CACA,cAAC,EAAD,CAAOS,WAAeA,Q,QCpBfI,EAAW,WAEtB,OAGE,0BAASb,UAAU,uBAAnB,UACI,yCAGA,eAACc,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,WAAY,6DAA8DC,aAAc,OAAQC,QAAS,OAAQC,UAAW,4DAA3J,UACI,cAACN,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMC,IAAI,iFAC5B,eAACT,EAAA,EAAKU,KAAN,WACI,cAACV,EAAA,EAAKW,MAAN,yBACA,cAACX,EAAA,EAAKY,KAAN,6GAKA,cAACC,EAAA,EAAD,CAAQL,QAAQ,UAAhB,4BCdHM,EAAU,WAAO,IAAD,EAEHpB,mBAAS,QAFN,mBAEpBqB,EAFoB,KAEdC,EAFc,KAIrBC,EAAuB,UAATF,EACdG,EAAuB,SAATH,EAKpB,OAGE,0BAAS7B,UAAU,uBAAnB,UAEI,wBAIA,eAACiC,EAAA,EAAD,CAAaC,KAAK,KAAKlC,UAAU,OAAjC,UACI,cAAC2B,EAAA,EAAD,CAAQQ,QAAY,kBAAML,EAAQ,UAAWf,MAAO,CAAEqB,OAAQ,OAAQC,OAAQN,EAAc,oBAAqB,MAAjH,oBACA,cAACJ,EAAA,EAAD,CAAQQ,QAAY,kBAAML,EAAQ,SAAWf,MAAO,CAAEqB,OAAQ,OAAQC,OAAQL,EAAa,oBAAqB,MAAhH,sBAOAD,EACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCrBGO,MAdf,WAGE,OACE,uBAAMtC,UAAU,uBAAhB,+BAGE,cAAC,EAAD,QCASuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.936f82c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\n\r\nexport const Input = () => {\r\n\r\n \r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n        \r\n        <InputGroup className=\"mb-3\">\r\n\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n            </InputGroup.Prepend>\r\n\r\n            <FormControl aria-label=\"Text input with checkbox\" />\r\n\r\n            \r\n        </InputGroup>\r\n\r\n        \r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\nimport { Input } from './Input'\r\n\r\n\r\n\r\nexport const Block = (props) => {\r\n\r\n  const [block, setBlock] = useState({})\r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n\r\n\r\n      { props.blockChart.map(item => <Input />) }\r\n\r\n        \r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { Block } from './Block'\r\n\r\nexport const BlockChart = () => {\r\n\r\n  //first load, get list from user.\r\n  const [blockChart, setBlockChart] = useState([\r\n    {},\r\n    {},\r\n    {},\r\n    {},\r\n    {}\r\n  ])\r\n \r\n\r\n  //a block chart returns a set of blocks\r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n      <h2> Blocks </h2>\r\n      <Block blockChart = { blockChart } />\r\n    </section>\r\n  );\r\n}\r\n\r\n","import ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport { Card, Title, Body, Img, Text, Button } from 'react-bootstrap'\r\n\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\nexport const CardGrid = () => {\r\n\r\n  return (\r\n    \r\n\r\n    <section className=\"flex-column-centered\">\r\n        <h2> Cards </h2>\r\n         \r\n\r\n        <Card style={{ width: '18rem', background: 'linear-gradient(to top, #FFF5CA , #FF64FF) no-repeat fixed', borderRadius: '16px', padding: '16px', boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)' }}>\r\n            <Card.Img variant=\"top\" src=\"https://i.pinimg.com/originals/b6/9c/bb/b69cbb3258ed8f69b4e988eab4946a9a.png\" />\r\n            <Card.Body>\r\n                <Card.Title>Card Title</Card.Title>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of\r\n                    the card's content.\r\n                </Card.Text>\r\n\r\n                <Button variant=\"primary\">Data</Button>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\n","import Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport '../styles/flex.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nimport {BlockChart} from '../BlockChart/BlockChart'\r\nimport {CardGrid} from '../CardGrid/CardGrid'\r\n\r\nexport const Builder = () => {\r\n\r\n  const [mode, setMode] = useState('card')\r\n\r\n  const isModeChart = mode === 'block'\r\n  const isModeCard  = mode === 'card'\r\n\r\n\r\n  //get database data and set mode\r\n\r\n  return (\r\n\r\n\r\n    <section className=\"flex-column-centered\">\r\n        \r\n        <div>\r\n\r\n        </div>\r\n\r\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n            <Button onClick = { () => setMode('block') } style={{ margin: '16px', border: isModeChart ? '2px solid #7E93E8': null }}>Blocks</Button>\r\n            <Button onClick = { () => setMode('card')  } style={{ margin: '16px', border: isModeCard ? '2px solid #7E93E8': null }}>Cards</Button>\r\n        </ButtonGroup>\r\n\r\n\r\n\r\n        {/* conditional re-render ok for now. May change based on API setup */}\r\n        {\r\n            isModeChart ? \r\n            <BlockChart />\r\n            :\r\n            <CardGrid />\r\n        }\r\n    </section>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport './styles/flex.css'\nimport { Builder } from './Builder/Builder'\n\nfunction App() {\n\n  //app setup. Tunnel content through here\n  return (\n    <main className=\"flex-column-centered\">\n      Port Building App.\n\n      <Builder />\n\n\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}